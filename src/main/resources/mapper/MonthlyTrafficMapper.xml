<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ac.kmgames.model.mapper.MonthlyTrafficMapper">

    <select id="getMonthlyTraffic" resultType="MonthlyTrafficDTO">
        SELECT
            DATE_FORMAT(g.created_date_time, '%Y-%m') AS month,
    SUM(p.game_price) AS msa,
	LAG(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) AS pmsa,
    ROUND( (((SUM(p.game_price))-(LAG(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m'))))/(LAG(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')))) * 100  , 2) AS msaip,
    SUM(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) AS cmsa,
    SUM(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) - SUM(p.game_price) as pcmsa,
    ROUND(((SUM(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m'))) - (SUM(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) - SUM(p.game_price)))/(SUM(SUM(p.game_price)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) - SUM(p.game_price)) * 100, 2) as cmsaip,
    COUNT(*) AS ms,
    LAG(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) AS pms,
    ROUND( (((COUNT(*))-(LAG(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m'))))/(LAG(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')))) * 100   ,2) as msip,
    SUM(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) AS cms,
    SUM(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) - COUNT(*) as pcms,
    ROUND( (((SUM(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')))-(SUM(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) - COUNT(*))) / (SUM(COUNT(*)) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) - COUNT(*))) * 100  ,2) as cmsip,
    p.game_post_id as gid,
    p.game_title as gtitle,
    p.game_price as gprice,
    ph.game_photo_id as gphid,
    LAG(p.game_title) OVER (ORDER BY DATE_FORMAT(g.created_date_time, '%Y-%m')) AS pgtitle
        FROM
            game_order g
            JOIN order_games o ON g.order_id = o.order_id
            JOIN game_post p ON o.game_post_id = p.game_post_id
            JOIN user u ON g.user_id = u.id,
            (select game_photo_id, game_post_id from game_photo group by game_post_id) as ph
        WHERE
            ph.game_post_id = p.game_post_id and
            g.created_date_time BETWEEN #{sd} AND #{ed}
        GROUP BY
            Month
        having max(p.game_post_id)
        ORDER BY
            Month;
    </select>
    <select id="getRatios" resultType="ac.kmgames.model.dto.GameDataDTO">
        select o.game_post_id as gid, (select game_title from game_post where game_post.game_post_id = o.game_post_id) as name, count(*) as gcount,
               ROUND( ((count(*))/((select count(*) from order_games)) * 100) , 2)  as y,
               ph.game_photo_id as gphid,
               p.game_price as gprice
        from order_games o, game_post p,
             (select game_photo_id, game_post_id from game_photo group by game_post_id) as ph
        where o.game_post_id = p.game_post_id and ph.game_post_id = p.game_post_id
        group by o.game_post_id
        order by count(*) desc;
    </select>


</mapper>